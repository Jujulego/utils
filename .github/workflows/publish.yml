name: 'Publish'

on:
  push:
    branches: [ master ]

concurrency:
  group: publish
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v3
        with:
          name: build
          path: dist

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Lint
        run: yarn lint

  tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.5.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - name: Test
        run: yarn test

      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  publish:
    runs-on: ubuntu-latest
    environment: npm
    needs: [ lint, build, tests ]

    steps:
      - uses: actions/checkout@v3.5.2

      - name: Use Node.js 16.x
        uses: actions/setup-node@v3.6.0
        with:
          node-version: 16.x
          registry-url: https://registry.npmjs.org
          cache: yarn

      - name: Install
        run: yarn install --immutable

      - uses: actions/download-artifact@v3
        with:
          name: build-artifacts
          path: dist

      - name: Publish
        run: yarn npm publish --access public --tolerate-republish
        env:
          YARN_NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  sonarcloud:
    if: ${{ !startsWith(github.head_ref, 'renovate/') }}
    runs-on: ubuntu-latest
    needs: [ tests ]

    steps:
      - uses: actions/checkout@v3.5.2
        with:
          fetch-depth: 0

      - name: Download test coverage
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: coverage
          path: coverage

      - name: Load package.json
        id: info
        run: echo "version=$(jq -r ".version" package.json)" >> $GITHUB_OUTPUT

      - name: Sonarcloud
        uses: sonarsource/sonarcloud-github-action@v1.9
        with:
          args: >
            -Dsonar.projectVersion=${{ steps.info.outputs.version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  tag:
    runs-on: ubuntu-latest
    needs: [ publish ]

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3.5.2

      - name: Read package.json
        id: info
        run: echo "version=$(jq -r ".version" package.json)" >> $GITHUB_OUTPUT

      - name: Tag version
        id: tag
        run: |
          echo "::group::git fetch --tags"
          
          git fetch --tags
          
          echo "::endgroup::"
          
          if [[ $(git tag -l $VERSION) == $VERSION ]]; then
            echo "::notice::git tag $VERSION already exists"
          else
            git config user.name github-actions
            git config user.email github-actions@github.com
          
            git tag $VERSION
            git push --tags
          
            echo "notes=true" >> $GITHUB_OUTPUT
          fi
        env:
          VERSION: v${{ steps.info.outputs.version }}

      - name: Release notes
        if: ${{ steps.tag.outputs.notes }}
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.info.outputs.version }}
          tag_name: v${{ steps.info.outputs.version }}
          draft: true
          generate_release_notes: true
